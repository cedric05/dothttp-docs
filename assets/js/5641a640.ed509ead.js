(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{134:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return o})),t.d(n,"toc",(function(){return p})),t.d(n,"default",(function(){return b}));var a=t(3),r=t(7),i=(t(0),t(243)),l={title:"Variables",slug:"variables"},o={unversionedId:"varibles",id:"varibles",isDocsHomePage:!1,title:"Variables",description:"Variables",source:"@site/docs/varibles.md",slug:"/variables",permalink:"/docs/variables",editUrl:"https://github.com/cedric05/dothttp-docs/edit/master/docs/varibles.md",version:"current",sidebar:"docs",previous:{title:"Authentication",permalink:"/docs/auth"},next:{title:"Comments",permalink:"/docs/comments"}},p=[{value:"Variables",id:"variables",children:[]},{value:"Environment",id:"environment",children:[]},{value:"random",id:"random",children:[{value:"uuid",id:"uuid",children:[]},{value:"randomSlug",id:"randomslug",children:[]},{value:"timestamp",id:"timestamp",children:[]}]},{value:"System Command",id:"system-command",children:[]},{value:"Os Environment Variables:",id:"os-environment-variables",children:[]}],c={toc:p};function b(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"variables"},"Variables"),Object(i.b)("p",null,"one can define variables in http file via ",Object(i.b)("inlineCode",{parentName:"p"},"{{var}}"),". define it once and use it everywhere"),Object(i.b)("h4",{id:"example-1"},"example 1:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-shell"},"//test.http\nGET https://httpbin.org/{{var=get}}\n? path = \"{{var}}\"\n// curl -X GET 'https://httpbin.org/get?path=get'\n")),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"https://cedric05.github.io/dothttp-playground/#eJzT1y9JLS7RyygpKeBydw1RADGKrfT1QXRSZp5eflG6fnV1WWKRbXpqSW0tl71CQWJJhoKtghJYtLZWiUtfXyG5tChHQTdCAWSCOjYjgJrtQRpBpqgDABPjJ6k="},"try in browser here")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"python -m dothttp test.http")),Object(i.b)("p",null,"In the above ",Object(i.b)("inlineCode",{parentName:"p"},"httpdef"),", var is set to ",Object(i.b)("inlineCode",{parentName:"p"},"get"),". one can overwrite it via"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"python -m dothttp test.http --properties var=post")),Object(i.b)("p",null,"producing"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"curl -X GET 'https://httpbin.org/post?path=post'")),Object(i.b)("h4",{id:"example-2"},"example 2:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-http"},'//test.http\nPOST https://httpbin.org/post\njson({\n  "firstname": "{{name=john}}",\n  "lastname": "{{lastname=doe}}",\n  "location": "hyderabad",\n// "location": "delhi",\n  "full name": "{{name}} {{lastname}}",\n})\n')),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"https://cedric05.github.io/dothttp-playground/#eJxVjc0KwjAQhO95iiUnBeneC30GBX2B1GxNSsyWZD1IyLtrFH96mhm+2VlEoSydE1nUYX88QXO5R2w6+thxuuDCWdScOW6KAtCTT1miuZLuQZfS3DCzi7XqXePB/ONPGizTt8FnI55ja7i7pWRGY58Icc0sBeffJ9MtBFg/rRV+86/pun0Aa2RE1A=="},"try in browser here")),Object(i.b)("p",null,"curl output will be"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-shell"},'curl -X POST \\\n-H \'Content-Length: 90\' \\\n-H \'Content-Type: application/json\' \\\n-d \'{"firstname": "john", "lastname": "doe", "location": "hyderabad", "full name": "john doe"}\' \\\nhttps://httpbin.org/post\n')),Object(i.b)("p",null,"override via properties by passing in command line"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"python -m dothttp --properties name=shiva lastname=prasanth")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-shell"},'curl -X POST \\\n-H \'Content-Length: 102\' \\\n-H \'Content-Type: application/json\' \\\n-d \'{"firstname": "shiva", "lastname": "prasanth", "location": "hyderabad", "full name": "shiva prasanth"}\' \\\nhttps://httpbin.org/post\n')),Object(i.b)("h2",{id:"environment"},"Environment"),Object(i.b)("p",null,"passing properties from command line is not always handy. one can define"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},".dothttp.json")," in same directory as http file"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'//.dothttp.json\n{\n  "*" : {\n    "default": "variables"\n  },\n  "john": {\n    "name": "jhonny",\n    "lastname": "depp"\n  },\n  // ironman\n  "ironman": {\n    "name": "robert",\n    "lastname": "dny jnr"\n  }\n}\n')),Object(i.b)("h2",{id:"random"},"random"),Object(i.b)("p",null,"while integration testing, having to replace few fields are pain points.\nusing $randomStr will generate random string of random length."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"random string ($randomStr)"),Object(i.b)("li",{parentName:"ul"},"random integer ($randomInt)"),Object(i.b)("li",{parentName:"ul"},"random float( $randomFloat)"),Object(i.b)("li",{parentName:"ul"},"random bool ( $randomBool)")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-http"},'//test.http\nPOST https://httpbin.org/post\njson({\n    "full name":  "john {{name=$randomStr:10}}",\n    "name":  "john {{name}}",\n    "height": {{$randomInt:2}},\n})\n')),Object(i.b)("p",null,'name --\x3e shiva + "randomString of length 10 chars"\nheight --\x3e randomInteger of length 2'),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"https://cedric05.github.io/dothttp-playground/#eJwL8A8OUcgoKSkottLXB9FJmXl6+UXp+gX5xSVcWcX5eRrVXApAoJRWmpOjkJeYm6pkBeRl5WfkKVRXg/i2KkWJeSn5ucElRVaGBrW1SjoQDdjUImQzUjPTM0qA8tXVUP2eeSVWRrW1Oly1mgBMty+h"},"try in browser here")),Object(i.b)("p",null,"made request will like below"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-shell"},'curl -X POST \\\n-H \'Content-Length: 73\' \\\n-H \'Content-Type: application/json\' \\\n-d \'{"full name": "john Z4gi1r8IEX", "name": "john Z4gi1r8IEX", "height": 51}\' \\\nhttps://httpbin.org/post\n')),Object(i.b)("h3",{id:"uuid"},"uuid"),Object(i.b)("p",null,"uuid is completely random string with 36 char length"),Object(i.b)("h4",{id:"example"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-http"},'POST "https://httpbin.org/post"\njson(\n  {\n    // generates random uuid\n    "uuid": "{{$uuid}}"\n  }\n\n)\n')),Object(i.b)("h3",{id:"randomslug"},"randomSlug"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"randomSlug")," or ",Object(i.b)("inlineCode",{parentName:"p"},"randomLoremSlug")),Object(i.b)("p",null,"we\u2019ll see random, human-readable slugs (e.g., brave-purple-penguin) in the web development world. These slugs offer the uniqueness of a number ID but can be more playful and fun."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"{{$randomSlug:3}}")," --\x3e create slug with 3 (",Object(i.b)("inlineCode",{parentName:"p"},"brave-purple-penguin"),")\n",Object(i.b)("inlineCode",{parentName:"p"},"{{$randomSlug:2}}")," --\x3e create slug with 3 (",Object(i.b)("inlineCode",{parentName:"p"},"brave-ranga"),")"),Object(i.b)("h4",{id:"example-3"},"example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-http"},'POST "https://httpbin.org/post"\njson(\n  {\n    // creates slug with human readable random\n    "slug": "{{$randomSlug:10}}"\n  }\n\n)\n')),Object(i.b)("h3",{id:"timestamp"},"timestamp"),Object(i.b)("p",null,"While testing, uniquely identifiying request is hard,  one can use timestamp (epoch) in headers or queryparams to distinguish from ther requests"),Object(i.b)("p",null,"usage:"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"{{$timestamp}}")," --\x3e generates ",Object(i.b)("inlineCode",{parentName:"p"},"1629338487"),"  (current timestamp)"),Object(i.b)("h4",{id:"example-4"},"Example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-http"},'POST "https://httpbin.org/post"\njson(\n  {\n    // creates current timestamp\n    "timestamp": "{{$timestamp}}"\n  }\n\n)\n')),Object(i.b)("h2",{id:"system-command"},"System Command"),Object(i.b)("p",null,"Environment file variables and properties defined in a file or through the command line are static. However, some variables\u2014such as ",Object(i.b)("inlineCode",{parentName:"p"},"access_token")," or ",Object(i.b)("inlineCode",{parentName:"p"},"sts"),"\u2014are time-sensitive and must be generated dynamically when needed."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"System Command Variables")," are those that can be generated on demand by running a command in the command line."),Object(i.b)("p",null,"To define a system command variable, create a key-value pair in the ",Object(i.b)("inlineCode",{parentName:"p"},"$commands")," section of your environment file. Here\u2019s an example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "$commands": {\n    "access_token": "az account get-access-token"\n  }\n}\n')),Object(i.b)("p",null,"In this example, the ",Object(i.b)("inlineCode",{parentName:"p"},"access_token")," is set up to be generated dynamically by executing the specified command when accessed."),Object(i.b)("h2",{id:"os-environment-variables"},"Os Environment Variables:"),Object(i.b)("p",null,"To use an OS environment variable in an HTTP file, prefix the variable name with DOTHTTP",Object(i.b)("em",{parentName:"p"},"ENV"),"."),Object(i.b)("p",null,"Example:\nDefine or export a variable, such as DOTHTTP_ENV_date, to use ",Object(i.b)("inlineCode",{parentName:"p"},"{{date}}")," it in the following HTTP request:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-http"},'Copy code\nGET https://req.dothttp.dev/get\njson({\n  "data": "{{date}}"\n})\n')),Object(i.b)("p",null,"In this example, DOTHTTP_ENV_date can be accessed as ",Object(i.b)("inlineCode",{parentName:"p"},"{{date}}")," within the HTTP request."))}b.isMDXComponent=!0},243:function(e,n,t){"use strict";t.d(n,"a",(function(){return s})),t.d(n,"b",(function(){return u}));var a=t(0),r=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=r.a.createContext({}),b=function(e){var n=r.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=b(e.components);return r.a.createElement(c.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},d=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),s=b(t),d=a,u=s["".concat(l,".").concat(d)]||s[d]||m[d]||i;return t?r.a.createElement(u,o(o({ref:n},c),{},{components:t})):r.a.createElement(u,o({ref:n},c))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=d;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=t[c];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);